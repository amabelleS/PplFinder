{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","context/favorites/context.js","components/User/style.js","components/User/User.js","hooks/usePeopleFetch.js","components/UserList/style.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","context/favorites/useFavoritesState.js","context/favorites/FavoritesStateProvidor.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","color","children","Typography","Spinner","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","name","FormControlLabel","control","Checkbox","checked","Context","createContext","User","UserInfo","UserPicture","img","IconButtonWrapper","isVisible","Transition","React","forwardRef","props","ref","Slide","direction","user","index","isLast","lastUserlementRef","isOnFavoritesPage","useContext","favoritesState","handleMouseEnter","handleMouseLeave","isUserInFavorites","switchFavorites","editFavorite","hoveredUserId","useState","open","setOpen","freeTextInput","freeTextValue","setFreeTextValue","handleClose","onMouseEnter","onMouseLeave","src","picture","large","alt","title","first","last","email","location","street","number","city","country","login","uuid","onClick","IconButton","Dialog","onClose","aria-labelledby","fullWidth","maxWidth","TransitionComponent","keepMounted","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","type","multiline","maxRows","e","target","DialogActions","Button","usePeopleFetch","users","setUsers","isLoading","setIsLoading","error","page","setPage","hasMore","setHasMore","options","root","rootMargin","treshhold","observer","useRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","a","axios","get","response","prev","data","results","length","useEffect","fetchUsers","UserList","List","SpinnerWrapper","Filters","filteredUsers","setFilteredUsers","brazil","australia","canada","germany","finland","state","setState","handleChange","filterUsersByCountry","filter","Object","key","push","countriesValues","includes","toLowerCase","map","Home","Content","Header","Favorites","HeaderGroup","CSVLinkrWrapper","favorites","searchTerm","setSearchTerm","searchResults","setSearchResults","favorite","headers","fontSize","style","FormControl","InputLabel","htmlFor","Input","aria-describedby","width","FormHelperText","Card","CardContent","marginLeft","ThemeProvider","overrides","MuiTab","backgroundColor","theme","useMemo","createMuiTheme","palette","primary","main","CssBaseline","reducer","action","payload","localStorage","setItem","JSON","stringify","favoritesUUIDs","useFavoritesState","initialSate","parse","getItem","useReducer","favoritesDispatch","updatedFavorites","fav","updatedUUIDs","text","updatedFavorite","FavoritesStateProvider","Provider","NavBar","routes","history","useHistory","pathname","setValue","AppBar","position","top","Tabs","event","newValue","aria-label","indicatorColor","textColor","Tab","component","Link","to","AppRouter","basename","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.233cd7c0.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n  color: ${({ color }) => color};\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: baseline;\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold, color }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold} color={color}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div`\r\n  display: flex;\r\n  .MuiFormControlLabel-root {\r\n    margin: 0 0 0 1rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value, name }) => {\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={isChecked}\r\n            onChange={onChange}\r\n            color=\"primary\"\r\n            value={value}\r\n            name={name}\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import { createContext } from \"react\";\r\n\r\nconst Context = createContext();\r\n\r\nexport default Context;\r\n","import styled from \"styled-components\";\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Context from \"../../context/favorites/context\";\r\nimport Text from \"components/Text\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nimport * as S from \"./style\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst User = ({ user, index, isLast, lastUserlementRef, isOnFavoritesPage }) => {\r\n  const {\r\n    favoritesState,\r\n    handleMouseEnter,\r\n    handleMouseLeave,\r\n    isUserInFavorites,\r\n    switchFavorites,\r\n    editFavorite,\r\n  } = useContext(Context);\r\n  const { hoveredUserId } = favoritesState;\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [freeTextValue, setFreeTextValue] = useState(user.freeTextInput);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // edit user\r\n  const handleEdit = () => {\r\n    setOpen(false);\r\n    editFavorite(user, freeTextValue);\r\n  };\r\n\r\n  const handelInputChange = (e) => {\r\n    setFreeTextValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <S.User\r\n        ref={isLast ? lastUserlementRef : null}\r\n        onMouseEnter={() => handleMouseEnter(index)}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n        <S.UserInfo>\r\n          <Text size=\"22px\" bold>\r\n            {user?.name.title} {user?.name.first} {user?.name.last}\r\n          </Text>\r\n          <Text size=\"14px\">{user?.email}</Text>\r\n          <Text size=\"14px\">\r\n            {user?.location.street.number} {user?.location.street.name}\r\n          </Text>\r\n          <Text size=\"14px\">\r\n            {user?.location.city} {user?.location.country}\r\n          </Text>\r\n        </S.UserInfo>\r\n        {isOnFavoritesPage ? (\r\n          <S.IconButtonWrapper\r\n            isVisible={index === hoveredUserId || isUserInFavorites(user.login.uuid)}\r\n            onClick={handleClickOpen}\r\n          >\r\n            <IconButton>\r\n              <EditIcon color=\"primary\" />\r\n            </IconButton>\r\n          </S.IconButtonWrapper>\r\n        ) : null}\r\n        <S.IconButtonWrapper\r\n          isVisible={index === hoveredUserId || isUserInFavorites(user.login.uuid)}\r\n          onClick={() => switchFavorites(user, index)}\r\n        >\r\n          <IconButton>\r\n            <FavoriteIcon color=\"error\" />\r\n          </IconButton>\r\n        </S.IconButtonWrapper>\r\n      </S.User>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth=\"md\"\r\n        maxWidth=\"md\"\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Your Inputs</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{user.freeTextInput}</DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Save to Favorite\"\r\n            type=\"text\"\r\n            fullWidth\r\n            multiline\r\n            maxRows={4}\r\n            value={freeTextValue}\r\n            onChange={handelInputChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleEdit} color=\"primary\">\r\n            Save Text\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  const options = {\r\n    root: null,\r\n    rootMargin: \"10px\",\r\n    treshhold: 1,\r\n  };\r\n\r\n  const observer = useRef(null);\r\n  const lastUserlementRef = useCallback(\r\n    (node) => {\r\n      // console.log(node);\r\n      if (isLoading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting && hasMore) {\r\n          setPage((prevPageNumber) => prevPageNumber + 1);\r\n        }\r\n      }, options);\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [isLoading, hasMore]\r\n  );\r\n\r\n  async function fetchUsers() {\r\n    if (page === 1) {\r\n      setIsLoading(true);\r\n    }\r\n    // setError(false);\r\n    const response = await axios.get(\r\n      `https://randomuser.me/api/?page=${page}&results=25`\r\n    );\r\n    setUsers((prev) => {\r\n      return [...prev, ...response.data.results];\r\n    });\r\n    setHasMore(response.data.results.length > 0);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [page]);\r\n\r\n  return {\r\n    users,\r\n    isLoading,\r\n    error,\r\n    lastUserlementRef,\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Spinner from \"components/Spinner\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CheckBox from \"../CheckBox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport User from \"../../components/User\";\r\nimport { usePeopleFetch } from \"hooks/usePeopleFetch\";\r\nimport * as S from \"./style\";\r\n\r\nconst UserList = () => {\r\n  const { users, isLoading, lastUserlementRef } = usePeopleFetch();\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n\r\n  // Checkboxes state:\r\n  const [state, setState] = useState({\r\n    brazil: false,\r\n    australia: false,\r\n    canada: false,\r\n    germany: false,\r\n    finland: false,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.checked });\r\n  };\r\n\r\n  const countriesValues = () => {\r\n    const results = [];\r\n    for (const [key, value] of Object.entries({ ...state })) {\r\n      // console.log(`${key}: ${value}`);\r\n      if (value) {\r\n        results.push(`${key}`);\r\n      }\r\n    }\r\n    return results;\r\n  };\r\n\r\n  const filterUsersByCountry = () => {\r\n    const results = users.filter((user) => {\r\n      if (countriesValues().includes(user.location.country.toLowerCase())) {\r\n        return user;\r\n      }\r\n      return null;\r\n    });\r\n\r\n    setFilteredUsers(results);\r\n    return results;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (users) {\r\n      filterUsersByCountry();\r\n    }\r\n  }, [state]);\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <FormControlLabel\r\n          control={\r\n            <CheckBox\r\n              checked={state.brazil}\r\n              onChange={handleChange}\r\n              color=\"primary\"\r\n              value=\"brazil\"\r\n              name=\"brazil\"\r\n            />\r\n          }\r\n          label=\"Brazil\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <CheckBox\r\n              checked={state.australia}\r\n              onChange={handleChange}\r\n              color=\"primary\"\r\n              value=\"australia\"\r\n              name=\"australia\"\r\n            />\r\n          }\r\n          label=\"Australia\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <CheckBox\r\n              checked={state.canada}\r\n              onChange={handleChange}\r\n              color=\"primary\"\r\n              value=\"canada\"\r\n              name=\"canada\"\r\n            />\r\n          }\r\n          label=\"Canada\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <CheckBox\r\n              checked={state.germany}\r\n              onChange={handleChange}\r\n              color=\"primary\"\r\n              value=\"germany\"\r\n              name=\"germany\"\r\n            />\r\n          }\r\n          label=\"Germany\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <CheckBox\r\n              checked={state.finland}\r\n              onChange={handleChange}\r\n              color=\"primary\"\r\n              value=\"finland\"\r\n              name=\"finland\"\r\n            />\r\n          }\r\n          label=\"Finland\"\r\n        />\r\n      </S.Filters>\r\n\r\n      <S.List>\r\n        {!isLoading &&\r\n          users.length > 0 &&\r\n          (filteredUsers && filteredUsers.length > 0 ? filteredUsers : users).map(\r\n            (user, index) => {\r\n              if (users.length === index + 1) {\r\n                return (\r\n                  <User\r\n                    user={user}\r\n                    index={index}\r\n                    key={index}\r\n                    isLast={true}\r\n                    lastUserlementRef={lastUserlementRef}\r\n                  />\r\n                );\r\n              } else {\r\n                return <User user={user} index={index} key={index} isLast={false} />;\r\n              }\r\n            }\r\n          )}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Favorites = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const HeaderGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-content: center;\r\n  width: 60vw;\r\n\r\n  @media (max-width: 700px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const CSVLinkrWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  position: absolute;\r\n  top: 3rem;\r\n  right: 0;\r\n  margin: 0;\r\n  font-size: 0.8rem;\r\n  padding: 0.7rem;\r\n  text-align: center;\r\n\r\n  > a {\r\n    display: flex;\r\n    text-decoration: none;\r\n    color: #84ffff;\r\n    font-size: 1.1rem;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport User from \"../../components/User\";\r\nimport Context from \"../../context/favorites/context\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport * as S from \"./style\";\r\n\r\nconst Favorites = () => {\r\n  const { favoritesState } = useContext(Context);\r\n  const { favorites } = favoritesState;\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const headers = [\r\n    { label: \"First Name\", key: \"name.first\" },\r\n    { label: \"Last Name\", key: \"name.last\" },\r\n    { label: \"Email\", key: \"email\" },\r\n    { label: \"Phone\", key: \"name.phone\" },\r\n    { label: \"Birth Date\", key: \"dob.date\" },\r\n    { label: \"Age\", key: \"dob.age\" },\r\n    { label: \"Country\", key: \"location.city\" },\r\n    { label: \"City\", key: \"location.country\" },\r\n    { label: \"City\", key: \"location.country\" },\r\n    { label: \"Time Zone Offset\", key: \"location.timezone.offset\" },\r\n    { label: \"Free Text\", key: \"freeTextInput\" },\r\n  ];\r\n\r\n  const handleInputChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (favorites && favorites.length > 0) {\r\n      const results = [...favorites].filter((favorite) => {\r\n        if (\r\n          (favorite &&\r\n            favorite.name.first.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (favorite &&\r\n            favorite.name.last.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (favorite &&\r\n            favorite.location.city.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (favorite &&\r\n            favorite.freeTextInput.toLowerCase().includes(searchTerm.toLowerCase()))\r\n        ) {\r\n          return favorite;\r\n        }\r\n        return null;\r\n      });\r\n      setSearchResults(results);\r\n    }\r\n  }, [searchTerm, favorites]);\r\n\r\n  return (\r\n    <S.Favorites>\r\n      <S.Content>\r\n        {favorites && favorites.length > 0 && (\r\n          <S.Header>\r\n            <S.CSVLinkrWrapper>\r\n              <CSVLink data={favorites} headers={headers}>\r\n                Download to CSV\r\n                <GetAppIcon color=\"primary\" />\r\n              </CSVLink>\r\n            </S.CSVLinkrWrapper>\r\n            <S.HeaderGroup>\r\n              <Text size=\"64px\" bold>\r\n                Favorites\r\n                <FavoriteIcon\r\n                  color=\"error\"\r\n                  fontSize=\"large\"\r\n                  style={{ margin: \"0 0.4rem 0 0.4rem \" }}\r\n                />\r\n              </Text>\r\n              <FormControl>\r\n                <InputLabel htmlFor=\"my-input\">Search Your Favorite</InputLabel>\r\n                <Input\r\n                  id=\"my-input\"\r\n                  aria-describedby=\"my-helper-text\"\r\n                  value={searchTerm}\r\n                  onChange={handleInputChange}\r\n                  style={{ width: \"11rem\" }}\r\n                />\r\n                <FormHelperText id=\"my-helper-text\">\r\n                  By name, city, or #free text.\r\n                </FormHelperText>\r\n              </FormControl>\r\n            </S.HeaderGroup>\r\n          </S.Header>\r\n        )}\r\n\r\n        <S.List>\r\n          {favorites.length <= 0 && (\r\n            <Card>\r\n              <CardContent>\r\n                <Text color=\"#84ffff\" size=\"2rem\" bold>\r\n                  Please select your favorites from the home page\r\n                  <FavoriteIcon\r\n                    color=\"error\"\r\n                    fontSize=\"large\"\r\n                    style={{ marginLeft: \"1rem\" }}\r\n                  />\r\n                </Text>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n          {favorites.length > 0\r\n            ? (searchResults.length > 0 ? searchResults : favorites).map(\r\n                (user, index) => {\r\n                  return <User user={user} index={index} key={index} isOnFavoritesPage />;\r\n                }\r\n              )\r\n            : null}\r\n        </S.List>\r\n      </S.Content>\r\n    </S.Favorites>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import { useReducer } from \"react\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"set-hoveredUserId\":\r\n      return { ...state, hoveredUserId: action.payload };\r\n    case \"set-favorites\":\r\n      localStorage.setItem(\"favorites\", JSON.stringify(action.payload));\r\n      return { ...state, favorites: action.payload };\r\n    case \"set-favoritesUUIDs\":\r\n      localStorage.setItem(\"favoritesUUIDs\", JSON.stringify(action.payload));\r\n      return { ...state, favoritesUUIDs: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useFavoritesState = () => {\r\n  const initialSate = {\r\n    favorites: JSON.parse(localStorage.getItem(\"favorites\")) || [],\r\n    favoritesUUIDs: JSON.parse(localStorage.getItem(\"favoritesUUIDs\")) || [],\r\n    hoveredUserId: null,\r\n  };\r\n  const [favoritesState, favoritesDispatch] = useReducer(reducer, initialSate);\r\n\r\n  const handleMouseEnter = (index) => {\r\n    favoritesDispatch({\r\n      type: \"set-hoveredUserId\",\r\n      payload: index,\r\n    });\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    favoritesDispatch({\r\n      type: \"set-hoveredUserId\",\r\n      payload: null,\r\n    });\r\n  };\r\n\r\n  const isUserInFavorites = (uuid) => {\r\n    return favoritesState.favoritesUUIDs.includes(uuid);\r\n  };\r\n\r\n  const editFavorite = (user, text) => {\r\n    const uuid = user.login.uuid;\r\n\r\n    const updatedFavorite = { ...user, freeTextInput: text };\r\n    const updatedFavorites = [\r\n      ...favoritesState.favorites.map((favorite) =>\r\n        favorite.login.uuid === uuid ? updatedFavorite : favorite\r\n      ),\r\n    ];\r\n\r\n    favoritesDispatch({\r\n      type: \"set-favorites\",\r\n      payload: updatedFavorites,\r\n    });\r\n  };\r\n\r\n  const switchFavorites = (user) => {\r\n    const uuid = user.login.uuid;\r\n    // check if user is not in favorites list\r\n    if (!isUserInFavorites(uuid)) {\r\n      // then add him to the list, adding freeTextInput\r\n      const updatedFavorites = [\r\n        ...favoritesState.favorites,\r\n        { ...user, freeTextInput: \"\" },\r\n      ];\r\n      const updatedUUIDs = [...favoritesState.favoritesUUIDs, uuid];\r\n\r\n      favoritesDispatch({\r\n        type: \"set-favorites\",\r\n        payload: updatedFavorites,\r\n      });\r\n\r\n      favoritesDispatch({\r\n        type: \"set-favoritesUUIDs\",\r\n        payload: updatedUUIDs,\r\n      });\r\n    } else {\r\n      //remove from favorites\r\n      const updatedFavorites = [...favoritesState.favorites].filter(\r\n        (fav) => fav.login.uuid !== uuid\r\n      );\r\n      const updatedUUIDs = [...favoritesState.favoritesUUIDs].filter((id) => id !== uuid);\r\n      favoritesDispatch({\r\n        type: \"set-favorites\",\r\n        payload: updatedFavorites,\r\n      });\r\n\r\n      favoritesDispatch({\r\n        type: \"set-favoritesUUIDs\",\r\n        payload: updatedUUIDs,\r\n      });\r\n    }\r\n  };\r\n\r\n  return {\r\n    favoritesState,\r\n    favoritesDispatch,\r\n    handleMouseEnter,\r\n    handleMouseLeave,\r\n    isUserInFavorites,\r\n    switchFavorites,\r\n    editFavorite,\r\n  };\r\n};\r\n\r\nexport default useFavoritesState;\r\n","import React from \"react\";\r\nimport useFavoritesState from \"./useFavoritesState\";\r\nimport Context from \"./context\";\r\n\r\nconst FavoritesStateProvider = ({ children }) => {\r\n  return <Context.Provider value={useFavoritesState()}>{children}</Context.Provider>;\r\n};\r\n\r\nexport default FavoritesStateProvider;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst NavBar = () => {\r\n  const routes = [\"/\", \"/favorites\"];\r\n  let history = useHistory();\r\n\r\n  const [value, setValue] = useState(history.location.pathname);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    // Do I need to push here?\r\n    // history.push(`${newValue}`);\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} value={routes[0]} component={Link} to={routes[0]} />\r\n        <Tab\r\n          label=\"Favorites\"\r\n          index={1}\r\n          value={routes[1]}\r\n          component={Link}\r\n          to={routes[1]}\r\n        />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n// import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n// Changed from HashRouter, both work\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { Home, Favorites } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport { FavoritesProvider } from \"context/favorites\";\r\nimport NavBar from \"components/NavBar\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <FavoritesProvider>\r\n      <ThemeProvider>\r\n        <Router basename=\"/PplFinder\">\r\n          <NavBar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/favorites\" component={Favorites} />\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </FavoritesProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}